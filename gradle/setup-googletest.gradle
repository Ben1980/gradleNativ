import org.apache.tools.ant.taskdefs.condition.Os;

task fetchGoogleTest {
    def thirdParty = new File(projectDir, "3rdparty")
    outputs.dir(thirdParty)
    doLast {
        mkdir thirdParty
        vfs {
            cp "zip:https://github.com/google/googletest/archive/master.zip", thirdParty, recursive: true, overwrite: true
        }
    }
}


task initBuildGoogleTest(type: Exec) {
    dependsOn fetchGoogleTest
    def thirdParty = new File(projectDir, "3rdparty")
    def googleTestBuildDir = new File(thirdParty, "googletest-master/googletest/build")
    mkdir googleTestBuildDir
    workingDir googleTestBuildDir
    executable = "cmake"
    args = ["../"]
    standardOutput = new ByteArrayOutputStream()
}

task buildGoogleTest(type: Exec) {
    dependsOn initBuildGoogleTest
    def thirdParty = new File(projectDir, "3rdparty")
    def googleTestBuildDir = new File(thirdParty, "googletest-master/googletest/build")
    workingDir googleTestBuildDir
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        executable = "C:/Program Files (x86)/Microsoft Visual Studio/2017/Professional/MSBuild/15.0/Bin/msbuild.exe"
        args = ["gtest.sln", "/p:Configuration=Release"]
    } else {
        executable = "make"
        args = []
    }
    standardOutput = new ByteArrayOutputStream()
}

// The CI builds will invoke assemble, which should fetch and build GoogleTest too.
assemble {
    dependsOn buildGoogleTest
}
